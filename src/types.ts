export interface ConfluenceConfig {
  baseUrl: string;
  email: string;
  apiToken: string;
}

export interface ConfluencePage {
  id: string;
  title: string;
  body: {
    storage: {
      value: string;
      representation: string;
    };
  };
  version: {
    number: number;
  };
}

export interface PageUpdateRequest {
  id: string;
  type: string;
  title: string;
  body: {
    storage: {
      value: string;
      representation: string;
    };
  };
  version: {
    number: number;
    message?: string;
  };
}

export interface AutoGeneratedSection {
  before: string;
  content: string;
  after: string;
  found: boolean;
}

/**
 * Options for external I/O operations
 * Supports timeout and cancellation via AbortSignal
 */
export interface IOOptions {
  /**
   * AbortSignal for cancellation from caller
   */
  signal?: AbortSignal;
  /**
   * Timeout in milliseconds (default: 10000ms)
   */
  timeoutMs?: number;
}

/**
 * Image reference in Markdown
 */
export interface ImageReference {
  originalPath: string; // Markdownでの参照パス
  resolvedPath: string; // 実際のファイルパス（絶対パス）
  alt: string;
  attributes?: {
    width?: number;
    height?: number;
  }; // <img>タグの属性
}

/**
 * Confluence image reference
 */
export interface ConfluenceImageReference {
  filename: string;
  downloadUrl: string;
}

/**
 * Confluence attachment information
 */
export interface AttachmentInfo {
  id: string;
  title: string; // ファイル名
  downloadUrl: string;
  fileSize: number;
  mediaType: string;
}

/**
 * Result of Markdown import operation
 */
export interface ImportResult {
  success: boolean;
  pageId: string;
  pageTitle: string;
  pageVersion: number;
  uploadedImages: string[]; // ファイル名のリスト
  skippedImages: string[]; // 既存だったファイル
}

/**
 * Result of Markdown export operation
 */
export interface ExportResult {
  success: boolean;
  markdownFile: string;
  downloadedImages: string[];
  outputDir: string;
}

/**
 * Validation result for image files
 */
export interface ValidationResult {
  valid: boolean;
  errors: ValidationError[];
}

/**
 * Validation error for image files
 */
export interface ValidationError {
  type: "not_found" | "size_limit" | "invalid_type";
  path: string;
  message: string;
}
